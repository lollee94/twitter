{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","craetorId","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","maxWidth","width","margin","display","justifyContent","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21118229.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBY6GjitoeVnbrdtpsAAwO-zuSXAmA_H1s\",\r\n    authDomain: \"twitter-81a8c.firebaseapp.com\",\r\n    projectId: \"twitter-81a8c\",\r\n    storageBucket: \"twitter-81a8c.appspot.com\",\r\n    messagingSenderId: \"540503069743\",\r\n    appId: \"1:540503069743:web:653ccbf3696ecb95c4e2da\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    console.log(userObj)\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [nweets, setNweets] = useState([]);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    /*\r\n    const getNweets = async () => {\r\n      const dbNweets = await dbService.collection(\"nweets\").get()\r\n      dbNweets.forEach((document) => {\r\n        const nweetObject = {\r\n            ...document.data(),\r\n            id: document.id,\r\n        };\r\n        setNweets(prev => [nweetObject, ...prev]);\r\n      });  \r\n    };\r\n    */\r\n\r\n    useEffect(() => {\r\n        // 구식 방법 getNweets();\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            //console.log(\"something happend\");\r\n\r\n            const nweetArray = snapshot.docs.map(doc => ({id: doc.id, ...doc.data()}))\r\n            setNweets(nweetArray);\r\n        })\r\n    }, []);\r\n\r\n\r\n    return(\r\n    <div className=\"container\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div style={{ marginTop: 30 }}>\r\n            {nweets.map((nweet) => (\r\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.craetorId === userObj.uid}/>\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\n<span>Home</span>;\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Navigation = ({userObj}) => (\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n);\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  // const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj = {userObj} refreshUser = {refreshUser} />\r\n            </Route>\r\n          </div>\r\n\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport { authService } from \"fbase\";\nimport AppRouter from \"components/Router\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null); \n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });      \n      }\n      setInit(true);\n    });\n  }, [])\n  /*;\n  console.log(authService.currentUser)\n  setInterval(() => {\n    console.log(authService.currentUser)\n  }, 2000);\n  */\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      { init ? <AppRouter isLoggedIn = {Boolean(userObj)} userObj = {userObj} refreshUser={refreshUser}/> : \"Initializing ...\" }\n      <footer>&copy; {new Date().getFullYear()} Twitter</footer>\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}